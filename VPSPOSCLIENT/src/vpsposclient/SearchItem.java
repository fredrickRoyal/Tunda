/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SearchItem.java
 *
 * Created on Feb 13, 2013, 10:38:56 PM
 */
package vpsposclient;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;

/**
 *
 * @author Royal
 */
public class SearchItem extends javax.swing.JDialog {

    /** Creates new form SearchItem */
    static TableModel model;

    public SearchItem(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        initComponents();
        try {
            searchText.requestFocus();
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        searchTable.setFont(new Font("serif", Font.PLAIN, 15));
        searchTable.setGridColor(new Color(232, 225, 226));
        searchTable.setRowHeight(25);
        searchTable.setRowMargin(2);
        searchTable.setSelectionBackground(new Color(252, 96, 17));
        TableColumn searchTableCol1 = searchTable.getColumnModel().getColumn(0);
        searchTableCol1.setPreferredWidth(1);
        searchTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        searchTable.getTableHeader().setFont(new Font("Serif", Font.BOLD, 15));
        searchTable.getTableHeader().setForeground(Color.BLUE);
        searchTable.getTableHeader().setBackground(new Color(241, 229, 238));
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ok = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        category = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        searchText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        ok.setText("Ok");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });

        searchTable.setModel(model);
        searchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTableMouseClicked(evt);
            }
        });
        searchTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchTableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(searchTable);
        searchTable.getColumnModel().getColumn(0).setResizable(false);

        category.setFont(new java.awt.Font("Times New Roman", 0, 12));
        category.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item", "sub category", "Main Category" }));
        category.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                categoryKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setText("Search by");

        searchText.setFont(new java.awt.Font("Times New Roman", 1, 18));
        searchText.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        searchText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextKeyReleased(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 12));
        jButton1.setText("Search");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(ok))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(10, 10, 10)
                        .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(ok)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {category, jButton1});

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
// TODO add your handling code here:

    try {
        int row = searchTable.getSelectedRow();
        Object id = searchTable.getModel().getValueAt(row, 0);
        SalesTerminal.itemId.setText(id.toString());
    } catch (Exception ex) {
    }
    SalesTerminal.searchItem.setVisible(false);
    SalesTerminal.searchItem.getRootPane().removeAll();
    SalesTerminal.searchItem.removeAll();
    SalesTerminal.searchItem.dispose();
    SalesTerminal.itemQuantity.requestFocus();
}//GEN-LAST:event_okActionPerformed

private void searchTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTableKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try {
            int row = searchTable.getSelectedRow();
            Object id = searchTable.getModel().getValueAt(row, 0);
            SalesTerminal.itemId.setText(id.toString());

        } catch (Exception ex) {
        }
        SalesTerminal.searchItem.setVisible(false);
        SalesTerminal.searchItem.getRootPane().removeAll();
        SalesTerminal.searchItem.removeAll();
        SalesTerminal.searchItem.dispose();
        SalesTerminal.itemQuantity.requestFocus();

    }
}//GEN-LAST:event_searchTableKeyPressed

private void searchTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextKeyReleased
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
        category.requestFocus();
    } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
        searchTable.requestFocus();
        searchTable.setRowSelectionInterval(0, 0);
    } else {
        try {
            String categorySearch = category.getSelectedItem().toString();
            String searchingText = searchText.getText();
            if (searchingText.isEmpty() || searchingText == null) {
                searchingText = "all";
            } else {
            }
            searchTable.setModel(new Controller().search(categorySearch, searchingText));

        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }

}//GEN-LAST:event_searchTextKeyReleased

private void categoryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_categoryKeyReleased
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
        searchText.requestFocus();
    } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
        searchTable.requestFocus();
        searchTable.setRowSelectionInterval(0, 0);
    }
}//GEN-LAST:event_categoryKeyReleased

private void searchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTableMouseClicked
// TODO add your handling code here:
    if (evt.getClickCount() == 2) {
        try {
            int row = searchTable.getSelectedRow();
            Object id = searchTable.getModel().getValueAt(row, 0);
            SalesTerminal.itemId.setText(id.toString());

            SalesTerminal.searchItem.setVisible(false);
            SalesTerminal.searchItem.getRootPane().removeAll();
            SalesTerminal.searchItem.removeAll();
            SalesTerminal.searchItem.dispose();
            SalesTerminal.itemQuantity.requestFocus();
        } catch (Exception e) {
        }

    }
}//GEN-LAST:event_searchTableMouseClicked

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
    try {
            String categorySearch = category.getSelectedItem().toString();
            String searchingText = searchText.getText();
            if (searchingText.isEmpty() || searchingText == null) {
                searchingText = "all";
            } else {
            }
            searchTable.setModel(new Controller().search(categorySearch, searchingText));

        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
}//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                SearchItem dialog = new SearchItem(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox category;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton ok;
    public static javax.swing.JTable searchTable;
    private javax.swing.JTextField searchText;
    // End of variables declaration//GEN-END:variables
}
